package com.rev.menu;
import java.sql.*;
import java.util.ArrayList;
import java.util.Scanner;


import com.rev.util.connectionFactory;

public class BankMenu {
	private static String currentUser=null;
	private static String userPassword=null;
	private String holder;
	private static ArrayList<Account> AccList;
	private static ArrayList<User> UserList;
	static Scanner keyboard=new Scanner(System.in);
	private static int userID;
	
	public static void startMenu() {
		String response;
		
		System.out.println("Welcome to Mike's Bank. Are you already banking with us(do you have a username already?)");
		System.out.println("Type Yes or No");
		response=keyboard.nextLine();
		
		if(response.equalsIgnoreCase("YES")) {
			setLogin();
		}
		
		else if(response.equalsIgnoreCase("NO")) {
			createUser();
		}
		else startMenu();
		
		
		
	}
	
	public static void createUser() {
		String firstname;
		String lastname;
		String email="";
		String phone;
		String username;
		String password;
		String password2;
		Boolean c=false;
		Boolean pwdMatch=false;
		
		System.out.println("Enter your First Name");
		firstname=keyboard.next();
		
		System.out.println("Enter your Last Name");
		lastname=keyboard.next();
		System.out.println("Enter your current Email Address");
		email=keyboard.next();
		if((email.contains("@"))&&(email.contains("."))){
			c=true;
		}
		while(c==false) {
			System.out.println("invalid email address. Please Re-Enter a valid email");
			email=keyboard.next();
			
			if((email.contains("@"))&&(email.contains("."))){
				c=true;
			}
			
		}
		
		System.out.println("Enter your phone number");
		phone=keyboard.next();
		
		System.out.println("Enter your desired username");
		username=keyboard.next();
		//going to have to already have logic here to check if username is already taken
		//can put up at the top and store 
	
		while(pwdMatch=false) {
		System.out.println("Enter a Password for your account");
		password=keyboard.next();
		System.out.println("Re enter your password");
		password2=keyboard.next();
		
		if (password.equals(password2)) {pwdMatch=true;}
		}
		
		
		//PUT LOGIC TO INSERT INTO USERS TABLE USING VARIABLES HERE
		
		
		/*
		 * then either set curent user login variables or return them to login
		 * method to do it themselves
		 */
		
		
	}
	public static void setLogin() {
		String usr;
		String pwd;
		
		System.out.println("Please enter your Username");
		usr=keyboard.next();
		
		if(usr.length()>20) { 
			System.out.println("Invalid Username");
			setLogin();}
		System.out.println("Please enter your password");
		pwd=keyboard.next();
		
		
		//ADD LOGIN TO CHECK FOR MATCHING INFO IN DB
		
		//if succesful set class variables for currentUSER, and userPassword
		
		if(currentUser!=null) {
			displayUserOptions();
		}
		else setLogin();
		
		
	}
	
	public static void displayUserOptions() {
		
		int respon;
		System.out.println("You are logged in as "+currentUser);
		
		System.out.println("Enter 1 to view Your current accounts");
		
		System.out.println("Press 2 if yo would like to make a Withdrawl");
		System.out.println("Press 3 if yo would like to make a Deposit");
		System.out.println("Enter >i hate mike< if you would like to delete one of your accounts");
		System.out.println("Press 4 to logout");
		System.out.println("Enter 5 to Open a new Checkings or Savings Account");
		
		respon=keyboard.nextInt();
		
		if (respon==1) {
			listCurrentUserAccounts();
		}
		if (respon==2) {
			Withdrawl();
		}
		if (respon==3) {
			Deposit();
		}
		
		if (respon==4) {
			currentUser=null;
			userPassword=null;
			startMenu();
		}
		
		if (respon==5) {
			newAccount(userID);
		}
	}
	private static void newAccount(int currentUserID) {
		int type;
		boolean good=false;
		
		while(good=false) {
		System.out.println("Type 1 for a checkings account or Type 2 to make a Savings Account");
		type=keyboard.nextInt();
		if(type!=1||type!=2) {
			System.out.println("I said 1 or 2 LISTEN");
			newAccount(currentUserID);
		}
		
		//after making a chose here we create a new bank account with a balance of 0 
		//with the chosen type of account from user
		
		
		
		
		}
		
		
		
		/*
		 * Here write logic to insert new account 
		 */
	}

	private static void deleteAccount() {
		int chosenAccz;
		String resp;
		
		listCurrentUserAccounts();
		System.out.println("Enter the acct id of the account you wish to Delete");
		chosenAccz=keyboard.nextInt();
		System.out.println("Warning it is your responsibility to withdraw your money before closing an account");
	System.out.println("Are you sure you want to continue? (Y/N)");
	resp=keyboard.nextLine();
	
	if(resp.equals("Y")) {
		//add delete statement for account matching entered account number
	}
	else {
		System.out.println("Good Choice");
		displayUserOptions();
	}
	}
	

	private static void Deposit() {
		
		int chosenAcc;
		double depositAmount;
		listCurrentUserAccounts();
		System.out.println("Enter the acct id of the account you wish to Deposit into.");
		chosenAcc=keyboard.nextInt();
		System.out.println("Please enter the amount of money You are depositing");
		depositAmount=keyboard.nextDouble();
		/*
		 * 
		 Add logic to insert chosen deposit amount into acct with matching acc ID
		 */
	}

	private static void Withdrawl() {
		int chosenAcc1;
		double depositAmount1;
		listCurrentUserAccounts();
		System.out.println("Enter the acct id of the account you wish to Deposit into.");
		chosenAcc1=keyboard.nextInt();
		System.out.println("Please enter the amount of money You are depositing");
		depositAmount1=keyboard.nextDouble();
		/*
		 * add logic here to check chosen withdrawl amount with balance of account selected from 
		 * db with the acct id that matches
		 */
	}

	private static ArrayList listCurrentUserAccounts() {	
		try(Connection conn= connectionFactory.getInstance().getConnection()){
			String query="select * from ACCOUNTS";
			
			//STATEMENT INTERFACE
			Statement statement=conn.createStatement();
			ResultSet rs=statement.executeQuery(query);
			
			while(rs.next()) {
				//iterate through rows of set
				Account temp=new Account();
				
				temp.setAccID(rs.getInt(1));
				temp.setAccType(rs.getString(4));
				temp.setAccNumber(rs.getInt(3));
				temp.setOwner(rs.getInt(2));
				temp.setBalance(rs.getDouble(5));
				
				AccList.add(temp);
			}
		
			
		
	}
		
		catch(Exception e) {
			e.printStackTrace();
		}
		
		
		
		//after putting user accounts to string in an array i will loop through
		//and print the acct number/balance/and acct id so the user can then use
		//this information to choose an account to deposit or withdraw to
		return AccList;
		
	}

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}

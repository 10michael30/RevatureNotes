<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">


<!-- configure spring container in beans.xml doesent have to be called beans
this can be done through annotations much easier
 -->


<bean id="thisIsABean" class="com.ex.hellospring.Helloworld" 
scope="prototype">

<!-- using prototype scope gives you a new bean with default values every time -->

<!-- setter injection, uses setter with existing property name 
<property name="message" value="Welcome to Spring. This is 
dependency injection"></property>
-->



<!-- this is constructor injection. -->

<constructor-arg name="message" value="Welcome to Spring, this is constructor Injection"/>
</bean>

<!-- this is dependency injection using ref instead to refer to another bean -->

<bean id="dependent" class="com.ex.hellospring.DepBean">
<property name="hello" ref="thisIsABean"></property>

</bean>

<bean id="employee" class="com.ex.autowire.Employee">
<constructor-arg name="name" value="Gen"/>
<property name="salary" value="100000"></property>
</bean>

<bean id="department" class="com.ex.autowire.Department"></bean>

</beans>
